
@model List<Genre>
@{
    ReqQuerySearchGenre searchValue = ViewBag.SearchValue ?? new ReqQuerySearchGenre();
    PaginationModel pagination = ViewBag.Pagination ?? new PaginationModel();
}
<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-12">
                    <h3 class="text-primary">Search</h3>
                </div>
                <div class="col-lg-12">
                    <form asp-action="Index" method="GET" id="frmSearchGenre">
                        <input type="text" name="menuKey" value="GM" hidden/>
                        <div class="form-group">
                            <label class="form-label" for="txtSName">Name</label>
                            <input type="text" value="@(searchValue.Name)" class="form-control" id="txtSName" name="Name" />
                        </div>
                        <div class="form-group mt-2">
                            <div class="d-flex justify-content-end"><button class="btn btn-info text-white"><i class="bi bi-search"></i></button></div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-12">
                    <h3 class="text-primary">List Genres</h3>
                </div>
                <div class="col-lg-12">
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Name</th>
                                <th>Created Date</th>
                                <th>Updated Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @for (int i = 0; i < Model.Count; i++)
                            {
                                <tr>
                                    <td>@(i+1)</td>
                                    <td>@(Model[i].Name)</td>
                                    <td>@(string.Format("{0:dd/MM/yyyy}", Model[i].CreatedAt))</td>
                                    <td>@(string.Format("{0:dd/MM/yyyy}", Model[i].UpdatedAt))</td>
                                    <td>
                                        <div class="d-flex align-items-center" style="column-gap: 4px;">
                                            <button class="btn btn-danger btn-sm btnDeleteGenre" data-genreID="@(Model[i].ID)"><i class="bi bi-trash"></i></button>
                                            <a href="@(RouteConstant.ADMIN_GENRE_MODIFY)?menuKey=GM&genreID=@(Model[i].ID)" class="btn btn-info btn-sm text-white"><i class="bi bi-pencil-square"></i></a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <div class="col-lg-12">
                    <div class="d-flex justify-content-end">
                        @await Component.InvokeAsync("Pagination", pagination)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const handleClickDeleteGenre = () => {
                $(".btnDeleteGenre").each(function () {
                    $(this).on("click", function () {
                        const genreID = $(this).attr("data-genreID");
                        Swal.fire({
                            title: "Are you sure?",
                            text: "You will not be able to recover this data!!!",
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#3085d6",
                            cancelButtonColor: "#d33",
                            confirmButtonText: "Yes, delete it!"
                        }).then((result) => {
                            if (result.isConfirmed) {
                                handleAjax(`/Admin/Genre/DeleteGenreByIdAPI?genreID=${genreID}`, {}, (res) => {
                                    if (res.success) {
                                        Swal.fire({
                                            title: "Deleted!",
                                            text: "Deleted Successfully",
                                            icon: "success"
                                        }).then(() => {
                                            location.reload(); // Tải lại trang sau khi xóa thành công
                                        });
                                    } else {
                                        Swal.fire({
                                            title: "Error Delete!",
                                            text: res.message,
                                            icon: "error"
                                        });
                                    }
                                }, { type: "DELETE" });
                            }
                        });
                    });
                });
            };
            function init() {
                handleClickDeleteGenre();
            }

            init();
        });
    </script>
}