@using BookStoreKAP.Models.DTO;
@using BookStoreKAP.Models.Entities;
@model List<UserRolesViewModel>;
@{
    ReqQuerySearchUserDTO searchValue = (ReqQuerySearchUserDTO)ViewBag.ReqSearch ?? new ReqQuerySearchUserDTO();
    List<Role> roles = (List<Role>)ViewBag.Roles ?? new List<Role>();
    PaginationModel paginationModel = ViewBag.Pagination ?? new PaginationModel();
}
<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <form asp-controller="Users" asp-action="Index" method="GET" id="frmSearchUser">
                <input type="text" name="menuKey" value="@(searchValue.menuKey)" hidden />
                <div class="row">
                    <div class="col-lg-12">
                        <div class="d-flex align-items-center justify-content-between">
                            <h3 class="text-info">Search</h3>
                            <div>
                                <button class="btn btn-danger" type="button" id="btnClearFilterSearch" >Clear Filter</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="row">
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label class="form-label" for="txtSFirstName">First Name</label>
                                    <input type="text" class="form-control" id="txtSFirstName" name="FirstName" value="@(searchValue.FirstName)" />
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label class="form-label" for="txtSLastName">Last Name</label>
                                    <input type="text" class="form-control" id="txtSLastName" name="LastName" value="@(searchValue.LastName)" />
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label class="form-label" for="txtSUsername">Username</label>
                                    <input type="text" value="@(searchValue.Username)" class="form-control" id="txtSUsername" name="Username" />
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label class="form-label" for="txtSPhoneNumber">Phone Number</label>
                                    <input type="text" class="form-control" id="txtSPhoneNumber" name="PhoneNumber" value="@(searchValue.PhoneNumber)" />
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label class="form-label" for="txtSEmail">Email</label>
                                    <input type="text" class="form-control" id="txtSEmail" name="Email" value="@(searchValue.Email)" />
                                </div>
                            </div>
                            <div class="col-lg-3">
                                <div class="form-group">
                                    <label class="form-label" for="cboSRoles">Roles</label>
                                    <select class="form-control select2" id="cboSRoles" name="RoleIds" value="@(searchValue.RoleIds)" multiple="multiple">
                                        @foreach (var role in roles)
                                        {
                                            if (searchValue.RoleIds != null && searchValue.RoleIds.Contains(role.Id))
                                            {
                                                <option value="@(role.Id)" selected>@(role.Name)</option>
                                            }
                                            else
                                            {
                                                <option value="@(role.Id)">@(role.Name)</option>
                                            }
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-lg-12 mt-1">
                                <div class="d-flex align-items-center justify-content-end">
                                    <div class="form-group">
                                        <button class="btn btn-info text-white" type="submit"><i class="bi bi-search"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
        <div class="col-lg-12">
            <hr />
        </div>
        <div class="col-lg-12">
            <div class="row">
                <div class="col-lg-12">
                    <h3 class="text-info">User list</h3>
                </div>
                <div class="col-lg-12">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        #
                                    </th>
                                    <th>
                                        First name
                                    </th>
                                    <th>
                                        Last name
                                    </th>
                                    <th>
                                        Birth of date
                                    </th>
                                    <th>
                                        Ship Address
                                    </th>
                                    <th>
                                        Username
                                    </th>
                                    <th>
                                        Email
                                    </th>
                                    <th>
                                        Phone Number
                                    </th>
                                    <th>
                                        Role
                                    </th>
                                    <th>
                                        Actions
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Count; i++)
                                {
                                    <tr>
                                        <td>@(i+1)</td>
                                        <td>@(Model[i].User.FirstName)</td>
                                        <td>@(Model[i].User.LastName)</td>
                                        <td>@(string.Format("{0:dd/MM/yyyy}", Model[i].User.BOD))</td>
                                        <td>@(Model[i].User.ShipAddress)</td>
                                        <td>@(Model[i].User.UserName)</td>
                                        <td>@(Model[i].User.Email)</td>
                                        <td>@(Model[i].User.PhoneNumber)</td>
                                        <td>@string.Join(", ", Model[i].Roles)</td>
                                        <td>
                                            <div class="d-flex align-items-center" style="column-gap: 4px;">
                                                @if (User!.Identity!.Name != Model[i].User.UserName)
                                                {
                                                    <button class="btn btn-danger btn-sm btnDeleteUser" data-userId="@(Model[i].User.Id)"><i class="bi bi-trash"></i></button>
                                                }
                                                else
                                                {
                                                    <button class="btn btn-secondary btn-sm btnDeleteUser" disabled><i class="bi bi-trash"></i></button>
                                                }
                                                <a href="@(RouteConstant.ADMIN_USERS_MODIFY)?menuKey=USER&userID=@(Model[i].User.Id)" class="btn btn-info btn-sm btnEditUser"><i class="bi bi-pencil-square"></i></a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="col-lg-12">
                    <div class="d-flex justify-content-end">
                        @await Component.InvokeAsync("Pagination", paginationModel)
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const handleClickClearFilter = () => {
                $("#btnClearFilterSearch").on("click", function (e) {
                    e.preventDefault();
                    location.href = "/Admin/Users?menuKey=USER";
                });
            }

            $("select[name='RoleIds']").select2();

            const handleRemoveUserByID = () => {
                $(".btnDeleteUser").each(function () {
                    $(this).on("click", function () {

                        Swal.fire({
                            title: "Are you sure?",
                            text: "You will not be able to recover this data!!!",
                            icon: "warning",
                            showCancelButton: true,
                            confirmButtonColor: "#3085d6",
                            cancelButtonColor: "#d33",
                            confirmButtonText: "Yes, delete it!"
                        }).then((result) => {
                            if (result.isConfirmed) {
                                const userId = $(this).attr("data-userId");
                                handleAjax(`/Admin/Users/RemoveUserByIDAPI?userID=${userId}`, {}, (res) => {
                                    if (res.success) {
                                        Swal.fire({
                                            title: "Deleted!",
                                            text: "Deleted Successfully",
                                            icon: "success"
                                        }).then((result) => {
                                            location.href = location.href;
                                        });
                                    } else {
                                        Swal.fire({
                                            title: "Error Delete!",
                                            text: "Delete Failed",
                                            icon: "error"
                                        });
                                    }
                                }, {type: "DELETE"});

                                
                            }
                        });

                    });
                });
            }

            function init() {
                handleClickClearFilter();
                handleRemoveUserByID();
            }
            init();
        });
    </script>
}