@model BookStoreKAP.Models.DTO.PaginationModel
@{
    int totalPages = (int)Math.Ceiling(Model.TotalItems / (double)Model.PageSize);
    int currentPage = Model.CurrentPage;
    var searchParams = (BookStoreKAP.Models.DTO.ReqSearchUserDTO)Model.SearchParams ?? new BookStoreKAP.Models.DTO.ReqSearchUserDTO();
    string action = Model.Action ?? "Index";
    string controller = Model.Controller ?? ViewContext.RouteData.Values["controller"].ToString();

    //Convert search params to Dict
    var searchParamsDict = new RouteValueDictionary();

    if (!string.IsNullOrEmpty(searchParams.menuKey))
    {
        searchParamsDict["menuKey"] = searchParams.menuKey;
    }

    foreach (System.Reflection.PropertyInfo property in searchParams.GetType().GetProperties())
    {
        if (property.Name != "menuKey")
        {
            var value = property.GetValue(searchParams, null);
            if (value != null && !string.IsNullOrEmpty(value.ToString()) && !value.Equals(Guid.Empty) && !value.Equals(default(DateTime)))
            {
                searchParamsDict[property.Name] = value;
            }
        }
    }

    searchParamsDict.Add("page", currentPage);
}

<nav aria-label="Page navigation">
    <ul class="pagination">
        @if (currentPage > 1)
        {
            searchParamsDict["page"] = currentPage - 1;
            <li class="page-item">
                <a class="page-link" href="@Url.Action(action, controller, searchParamsDict)" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link" href="#" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }

        @for (int i = 1; i <= totalPages; i++)
        {
            if (i == currentPage)
            {
                <li class="page-item active"><span class="page-link">@i</span></li>
            }
            else
            {
                searchParamsDict["page"] = i;
                <li class="page-item">
                    <a class="page-link" href="@Url.Action(action, controller, searchParamsDict)">@i</a>
                </li>
            }
        }

        @if (currentPage < totalPages)
        {
            searchParamsDict["page"] = currentPage + 1;
            <li class="page-item">
                <a class="page-link" href="@Url.Action(action, controller, searchParamsDict)" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <a class="page-link" href="#" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>
